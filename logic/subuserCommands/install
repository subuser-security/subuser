#!/usr/bin/env python
# This file should be compatible with both Python 2 and 3.
# If it is not, please file a bug report.
import sys
import os
import subuserlib.availablePrograms
import subuserlib.installCommon
import subuserlib.utils
import subuserlib.describe

######################################################
home = os.path.expanduser("~")
######################################################

def printHelp():
  """
    Display a help message for the install mode of the subuser command.
  """
  print("""To install packages list there names: 
  $ subuser install vim firefox

Options:
  --from-cache build this image using layers from the cache
  $ subuser install vim --from-cache
  """)

#################################################################################################
if len(sys.argv) == 1 or sys.argv[1] == "help" or sys.argv[1] == "-h" or sys.argv[1] == "--help":
  printHelp()
  sys.exit()
#################################################################################################

commandOptionList = ['--from-cache']
userProgramList, userOptionList = subuserlib.utils.getUserCommandLine(sys.argv[1:], commandOptionList)

# Are we to use layers from the cache when building the docker image: only for Dockerfiles build images
cacheArg = "--no-cache=true"
if '--from-cache' in commandOptionList:
  cacheArg = "--no-cache=false"

for program in userProgramList:
  print(program)
  subuserlib.installCommon.installProgramAndDependencies(program, cacheArg)

#print for the MAIN program (The user called not the dependency the permission)
print("\n============= INSTALLATION OK =============\n\n")
for program in userProgramList:
  #there is too much output: a user will hardly recognize the nice info provided: add some space
  print("\n{0}: has been installed with the following permissions.".format(program))
  subuserlib.describe.printInfo(program,False)
  print("You can change this program's permissions at any time by editing it's permissions.json file.")
